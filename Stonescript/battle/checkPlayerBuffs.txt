// Poison	∞
// Vigor	♥
// Æther	*
// Fire		φ
// Ice		❄


var x
var i
var j
var symbol
var buffsCount
var o
var vampiric
var invisibility
var poison
var vigor
var aether
var fire
var ice
var PlayerMaxHpLength = numberLength(maxhp)

buffsCount = 0
o = 0
vampiric = 0
invisibility = 0
poison = 0
vigor = 0
aether = 0
fire = 0
ice = 0

x = numberLength(hp) + PlayerMaxHpLength + 6
?armor > 0 | armor.f > 0
	x = x + numberLength(armor) + 4

?debuffs.count > 0
	for i = 1..debuffs.count + 1
		j = x + i + buffsCount
		symbol = draw.GetSymbol(j, screen.h - 1)
		?symbol = "O"
			i--
			buffsCount++
			o++
		:?symbol = "W"
			i--
			buffsCount++
			vampiric++
		:?symbol = "?"
			i--
			buffsCount++
			invisibility++
		:?symbol = "∞"
			poison++
		:?symbol = "♥"
			vigor++
		:?symbol = "φ"
			fire++
		:?symbol = "❄"
			ice++
		//:?symbol = "*"
		//	aether++
:
	for i = 0..1
		j = x + buffsCount + 1
		symbol = draw.GetSymbol(j, screen.h - 1)
		?symbol = "O"
			i--
			buffsCount++
			o++
		:?symbol = "W"
			i--
			buffsCount++
			vampiric++
		:?symbol = "?"
			i--
			buffsCount++
			invisibility++
		:?symbol = "!"
			i--
			buffsCount++
			invisibility++
		//:?symbol = "?"
		//	i--
		//	buffsCount++
		//	invisibility++


func numberLength(n)
	?n < 10
		return 1
	:?n < 100
		return 2
	:?n < 1000
		return 3
	:?n < 10000
		return 4
	:?n < 100000
		return 5