//如何使用9件+15和2件+21裝備通關15高原?

/* 除+15以外的必要裝備
鐵頭木棒
前衝之盾
打擊之盾
複合盾(最好滿星或以上)
火護符
*/
//破甲: 鎧甲疲勞 大鎚 *10+15

//毒屬性:
//攻速 dP 長杖 *10 +15 
var poison = "poison staff dP *10 +15"
//攻速 D 短劍 *10 +15
var poisonD = "poison sword D *10 +15"
//體力屬性: 攻速 dL 短劍 *10 +13~15 *2
var vigor1 = "vigor sword dL *10 +15 shiny"
var vigor2 = "vigor sword dL *10 +15 -shiny"
//乙太屬性: 攻速 D 短劍 *10 +13~15 *2
var aether1 = "aether sword D *10 +15 shiny"
var aether2 = "aether sword D *10 +15 -shiny"
//火屬性: 攻速 D 短劍 *10 +13~15 *2
var fire1 = "fire sword D *10 +21 shiny"
var fire2 = "fire sword D *10 +21 -shiny"
//冰屬性:
//攻速 dI 長杖 *10 +15
var ice = "ice staff dI *10 +15"
//攻速 D 短劍 *10 +15
var iceD = "ice sword D *10 +15"

//回甲最快的盾
var speed_shield = "compound *10"
//回甲最快的盾的上限
var speed_shield_value = 14
//上限最高的盾
var value_shield = "compound *10"
//疊盾
func restoreArmor(L)
 var speed_maxarmor = speed_shield_value
 ?L = "quest"
  speed_maxarmor = speed_maxarmor + 2
 ?armor >= speed_maxarmor
  selectEquip(L, value_shield)
 :
  selectEquip(L, speed_shield)

var attackLoop = -1

//萬用取消後搖
?item.left.state = 3
 equipL sword
?item.right.state = 3
 equipR shield

//更換裝備
//防止白痴一樣的月石換裝卡手
//因為是在最後才更換,所以技能需要在activate前再寫一次原來的equip
//另外因為是在最後才更換,只要有寫一句就會把所有預設的equip覆蓋
//還有因為是在最後才更換,上面的取消後搖不用改
//(重要的事要重複三次)
var eL = ""
var eR = ""
func selectEquipL(e) //左手,取代equipL
 eL = e
func selectEquipR(e) //右手,取代equipR
 eR = e
func selectEquip(L, R) //左右手,把兩行寫成一行
 selectEquipL(L)
 selectEquipR(R)
func selectEquipT(e) //雙手,取代equip
 selectEquip(e, e)
func changeEquip()
 ?eL = eR & eL
  equip @eL@
 :
  ?eL
   equipL @eL@
  ?eR
   equipR @eR@

//木棒衝刺
func quarterstaffSkill()
 ?item.GetCooldown("quarterstaff") <= 0 &
 ^item.CanActivate()
  selectEquipT("quarterstaff")
  equip quarterstaff
  activate R
  return true
//盾衝
func dashSkill()
 ?foe.distance > 16
  ?quarterstaffSkill()
   return true
 ?foe.distance > 10
   ?item.GetCooldown("dash") <= 0
    selectEquip("trisk","dash")
    return true
   :?item.GetCooldown("bash") <= 0
    selectEquip("trisk","bash")
    return true
  

//躲避
func mindSkill()
 ?item.GetCooldown("mind") <= 0
  selectEquip("quest","mind")
  return true

//火護符
func fire_talismanSkill()
 ?summon.GetId() ! "cinderwisp" &
 ^(item.GetCooldown("fire_talisman") <= 0 |
 ^item.right="fire_talisman" &
 ^item.right.state=2)
  selectEquip("trisk","fire_talisman")
  equipL trisk
  equipR fire_talisman
  activate R
  return true
//火精靈技能
func cinderwispSkill()
 ?summon.GetId() = "cinderwisp" &
 ^item.GetCooldown("cinderwisp") <= 0 &
 ^summon.GetVar("ignition") = 10
  activate cinderwisp


//冰debuff數量
var iceCount = 0
func getIceCount()
 ?foe.debuffs.count
  var index = string.IndexOf(
  ^foe.debuffs.string,
  ^"debuff_chill")
  ?index >= 0
   iceCount = int.parse(string.Sub(
   ^foe.debuffs.string, index + 13, 1))
   return
 iceCount = 0
//冰debuff效果
func iceEffect()
 return iceCount*20/3
func needIce()
 return iceCount<6

//毒debuff效果
var poisonEffect
poisonEffect=(
^foe.debuffs.string="debuff_damage")
//這個timer是boss的攻擊時間,不是角色的攻擊時間
func needPoison(timer)
 return !poisonEffect & timing(32, timer-12)

var moonTimer = -1
func moondialing_21_21(L, R)
 moonTimer = (moonTimer + 1) % 3
 ?moonTimer = 0
  selectEquip("moon", R)
 :?moonTimer = 1
  selectEquip(L, "moon")
 :?moonTimer = 2
  selectEquip(L, R)

//應對時機
func timing(s, t)
 return foe.state=s & foe.time>=t+iceEffect()



////小boss////
func boss_0()
 ?foe.distance <= 10
  ?needIce()
   selectEquipT(ice)
  :?needPoison(14)
   selectEquipT(poison)
  :
   moondialing_21_21(fire1, fire2)
 :
  dashSkill()

////第1階段////
func boss_1()
 //上debuff
 ?needIce()
   selectEquipT(ice)
 :?needPoison(24)
   selectEquipT(poison)

 :?foe.distance <= 10
  ?hp < maxhp * 3 / 4
   selectEquip(vigor1,vigor2)
  :
   moondialing_21_21(fire1, fire2)
 :
  dashSkill()

////第2階段////
func boss_2()
 ?foe.distance <= 10
  ?foe = "poison"
   selectEquip(iceD,vigor1)
  :?foe = "vigor"
   selectEquip(poisonD,vigor1)
  :?foe = "aether"
   selectEquip(vigor1,vigor2)
  :?foe = "fire"
   selectEquip(aether1,aether2)
  :?foe = "ice"
   moondialing_21_21(fire1, fire2)

  //在攻擊前截斷上debuff的裝備, 以免自家吃debuff
  ?timing(32,57)
   return

  //如果沒有免疫就上debuff
  ?foe.buffs.string ! "buff_protection"
   ?needIce()
    selectEquipT(ice)
   //體力屬性是回血+免疫debuff, 不需要上毒
   :?needPoison(30) & foe ! "vigor"
    selectEquipT(poison)

 :
  dashSkill()

////第3階段////
func boss_3()
 //攻擊循環+1 (0~5)
 ?(foe.state=32 | foe.state=115) & !foe.time
  attackLoop = (attackLoop + 1) % 6

 ?(foe.state = 115 & foe.time = 76) | //激光
 ^attackLoop=2&foe.distance<8&timing(32,27) //擊暈
  ?mindSkill()
   return

 //大鎚技能削減盾量
 ?attackLoop = 2 & timing(32,12)
  //大鎚
  ?item.GetCooldown("hammer") <= 0 |
  ^(item.right="heavy"&item.right.state=2)
   selectEquipT("heavy")
   equip heavy
   activate R
   return

 //先用不常用的屬性, 以應對第一次開盾的屬性免疫
 ?foe.distance <= 10
  ?foe.buffs.count
   //如果有攻擊型的藥水就在第一次開盾後使用
   ?item.potion = "berserk" |
   ^item.potion = "lucky"
    activate potion

  ?hp < maxhp
   selectEquip(vigor1,vigor2)
  :?!foe.buffs.count
   selectEquip(aether1,aether2)
  :
   moondialing_21_21(fire1, fire2)

  ?(buffs.string = "berserk" |
  ^buffs.string = "lucky")
   return
 :
  dashSkill()

 ?needIce() //上冰
  selectEquipT(ice)
 //上毒, 但跳過可以躲避的技能
 :?needPoison(43) & attackLoop!2&attackLoop!5
  selectEquipT(poison)

 //如果有回復藥就在結束回滿血, 以防萬一
 ?(item.potion = "healing" & hp < maxhp &
 ^(foe.hp + foe.armor) < 1000 & (foe.state=33 |
 ^attackLoop = 2 | attackLoop = 5)) |

 ^(item.potion = "defensive" &
 ^(foe.hp + foe.armor) < 15000)
  activate potion


func main()
 getIceCount()
 cinderwispSkill()

 ?totaltime <= 1
  brew tar + stone //回甲藥
  //brew tar //回血藥

  //第一埸開局會直接滿甲
  selectEquip("quest",value_shield)

  moonTimer = -1
  return

 //吸取掉落物
 ?pickup.distance <= 5
  selectEquip("trisk","star")

 //跑路
 :?foe.distance > 23
  ?quarterstaffSkill()
   return

  ?!summon.GetId()
   ?fire_talismanSkill()
    return

  restoreArmor("trisk")

 //動畫
 :?!ai.enabled
  //重置循環計算
  attackLoop = -1

  restoreArmor("quest")

 ////第1階段////
 :?foe = phase1
  boss_1()

 ////第2階段////
 :?foe = phase2
  boss_2()

 ////第3階段////
 :?foe = phase3
  boss_3()

 ////小boss////
 :
  boss_0()

 //更換裝備
 changeEquip()
main()