// initialize // 初始化 //

//武器傷害
var BardichePower = 159
var BladeSkillPower = 95 //145


//技能冷卻時間
var MindStoneSkillCooldown			= 360
var FissureStoneSkillCooldown		= 540
var QuarterstaffSkillCooldown		= 150
var BardicheSkillCooldown			= 900
var bladeSkillCooldown				= 2400

//技能前搖時間(無buff)
var MindStoneSkillActionDuration		= 2
var QuarterstaffSkillActionDuration     = 1
var BardicheSkillActionDuration			= 18
var BladeSkillActionDuration			= 1

//技能再使用時間
var dashStoneSkillCD = 0
var bashStoneSkillCD = 0
var mindStoneSkillCD = 0
var fissureStoneSkillCD = 0
var quarterstaffSkillCD = 0
var bardicheSkillCD = 0
var bladeSkillCD = 0

var ouroborosSkillTimer = 188
var ouroborosSkillUseCount = 0


//技能前搖
var skillActionDuration = 0
var skillAction = false

//裝備
var eL = ""
var eR = ""
var e = -1				//需求裝備組
var currentEquip = -1	//現時裝備組 -1=散件裝備 -2=採集 -3=取消切換 -4=冷卻緩衝 -9=取消後搖
var equipBuffer = -1

//boss
var bossFight = 0 //boss形態
var bossConvert = 0
var bossFirstAttackTime = 0
var bossAttackInterval = 0
var bossAttackLoop = -1
var bossDissolve = true
var t = 0
var timer = 0
var bossAttackTimer = 0

var potion = new checkPotion

//比較用
var playerHp = 80
var playerArmor = 0
var playerState = 0
var playerInjury = false
var playerDebuffsCount = 0
var playerBuffs = new processBuffString
var playerDeBuffs = new processBuffString
var attackCount = 0
var action = true
var equipTimer = 0
var dash = false

var foeMaxHp = 0
var foeHp = 0
var foeMaxArmor = 0
var foeArmor = 0
var foeState = 0
var foeInjury = false
var distance = 0
var damage = 0

var foeDebuffsCount = 0
var foeBuffs = new processBuffString
var foeDeBuffs = new processBuffString

//var foeIceCount = 0
//var foeIceTimer = 0
//var minFoeIceTimer = 0
//var foeIceTimerListIndex = 0
//var foeIceTimerList = [0,0,0,0,0,0]

//測試用
var a = 0
var b = 0
var c = 0
var d = 0
var cache

var x = 0
var y = 0
var symbol

var DPS = import DPSCalculator

// 循環初始化 //
?loc.loop
	dashStoneSkillCD = 0
	bashStoneSkillCD = 0
	mindStoneSkillCD = 0
	fissureStoneSkillCD = 0
	quarterstaffSkillCD = 0
	bardicheSkillCD = 0
	bladeSkillCD = 0
	skillActionDuration = 0
	skillAction = false
	
	bossFight = 0
	bossConvert = 0
	bossAttackLoop = -1
	timer = 0

	potion.checkPotion()
	
	playerHp = 0
	playerArmor = 0
	playerInjury = false
	playerState = 0
	attackCount = 0
	action = true
	dash = false
	
	foeMaxHp = 0
	foeHp = 0
	foeMaxArmor = 0
	foeArmor = 0
	foeInjury = false
	foeState = 0
	distance = 0
	
	//a = 0
	//b = 0
	//c = 0
	//d = 0



// main //
func main()
	injury()
	updateBuff()
	canAction()
	
	selectPotion()
	
	bossFightStart()

	selectAction()

	changeEquip()
	update()

// 受擊判定 / 狀態更新 / DPS計算(DPSCalculator) //
func injury()
	playerInjury = playerHp > hp | playerArmor > armor + 2
	?hp = maxhp
		playerState = 0 //全滿
	:
		?armor > 0
			playerState = 1 //有甲
		?hp > maxhp / 2 // * 3 / 4
			playerState = 2 //無甲
		:?hp > 5 + loc.stars - loc.stars % 5
			playerState = 3 //半血以下
		:
			playerState = 4 //危險線

	DPS = import DPSCalculator
	foeInjury = (foeHp > foe.hp + (foeMaxHp - foe.maxhp) + 5 | foeArmor > foe.armor + 5) & foe ! wasp
	?foeInjury
		damage = foeHp - foe.hp + foeArmor - foe.armor
		attackCount = (attackCount + 1) % 2
	:
		damage = 0
		
	?foe.hp = foe.maxhp & foe.armor = foe.maxarmor
		foeState = 0 //全滿
	:?foe.armor > 0
		foeState = 1 //有甲
	:
		foeState = 2 //無甲
	?foe.hp + foe.armor <= BardichePower * 5
		?foe.hp + foe.armor <= BardichePower
			foeState = foeState + 20 //月牙秒殺線
		:
			foeState = foeState + 10 //危險線


// buff更新(processBuffString) //
func updateBuff()
	playerBuffs = new processBuffString
	playerDeBuffs = new processBuffString
	playerBuffs.playerBuffs()
	playerDeBuffs.playerDeBuffs()
	
	?foe.count
		foeBuffs = new processBuffString
		foeDeBuffs = new processBuffString
		foeBuffs.foeBuffs()
		foeDeBuffs.foeDeBuffs()

		/*
		?foeDeBuffs.iceCount
			minFoeIceTimer = 180
			for i = 0..5
				cache = foeIceTimerList[i]
				>`0,@i@,@i@ @cache@
				?cache > 0
					foeIceTimerList.Emplace(i, cache - 1)
				?minFoeIceTimer > cache
					minFoeIceTimer = cache
			?foeIceCount < foeDeBuffs.iceCount | foeIceTimer < foeDeBuffs.iceTimer
				foeIceTimerList.Emplace(foeIceTimerListIndex, 180)
				foeIceTimerListIndex = (foeIceTimerListIndex + 1) % 6
				loc.pause()
			foeIceCount = foeDeBuffs.iceCount
			foeIceTimer = foeDeBuffs.iceTimer
		:
			foeIceCount = 0
			foeIceTimer = 0
			minFoeIceTimer = 0
			foeIceTimerListIndex = 0
			for i = 0..5
				foeIceTimerList.Emplace(i,0)
		*/



// 使用藥水 //
func selectPotion()
	?playerState = 4 &
	^(potion.name = "vampiric" | potion.name = "cleansing" | potion.name = "healing" | potion.name = "invisibility" | potion.name = "defensive")
		usePotion()


// 裝備更換選擇 //
func selectAction()
	?false & harvest.distance < 5//採集許可
		?harvest = boulder //巨石
			return
			equip "shovel"
			e = -2
		:?harvest = tree //樹
			return
			equipL "moon"
			equipR "hatchet"
			e = -2
			?canAction()
				activate R
	:?pickup.distance <= 5
		e = 93
	:?!foe.count
		useQuarterstaffSkill()
		e = 864


	?bossFight //boss戰
		//fightTest()
		//return
		?bossConvert = -1 & loc ! ridge
			e = 307
		:?foe.distance < 25
			?loc = rocky
				bossFightInRocky()
			:?loc = deadwood
				bossFightInDeadwood()
			:?loc = caves
				bossFightInCaves()
			:?loc = mushroom
				bossFightInMushroom()
			:?loc = halls
				bossFightInHalls()
			:?loc = mine
				bossFightInMine()
			:?loc = ridge
				bossFightInRidge()
			:?loc = temple
				bossFightInTemple()
			:?foe = boss & foeState > 10 & foe.distance <= 10// & bossFight > 0
				e = 6
				//useBardicheSkill()


	:?foe.count
		?foe.distance < 25 //進入攻擊範圍
			?foe.distance <= 11 //近程範圍
				?(foe.count >= 5 + (loc.stars - 1) % 5 & screen.i >= 3) & loc ! mushroom
					useBladeSkill()

				//?foeState >= 20 | foe.count > 5 | foe = unpushable | foe = immune_to_ranged
				e = 700
				?playerBuffs.smiteCount > 5 & needIce()
					e = 8
				?foe = pillar
					?armor > 20 | foe.count = 1
						e = 9
					:
						e = 22
				?foe.count = 1
					?foe.distance > 5
						useQuarterstaffSkill()
					:?loc = mushroom
						e = 101
					:?loc = mine
						e = 103
				?foe.state = 32 & (foe = mosquito | foe = slave_master)
					e = 22
				dash = false
			:
				?foe.distance > 12 & armor < 30 //& foe.count > 5 //& hp < maxhp - 10
					?foe = poison
						e = 365
					:?foe = vigor
						e = 361
					:?foe = aether
						e = 362
					:?foe = fire
						e = 363
					:?foe = ice
						e = 364
				:
					useDashSkill()
				/*
				?playerInjury | loc.stars < 10 | foe = immune_to_ranged | foe = mosquito | foe = slave_master //| foe.hp <= BardichePower
					dash = true
				?dash | foe.count = 1
					useDashSkill()
				:
					e = 7
					?playerBuffs.smiteTimer & needIce()
						e = 8
					:
						e = 7
				*/
			?foe = immune_to_physical //免疫物理(幽靈) 
				e = 8




// 更換裝備 //

//短劍	1	(100~199)
//大劍	2	(200~299)
//盾	3	(300~399)
//弩	4	(400~499)
//棍	5	(500~599)
//鎚	6	(600~699)
//其他	 	(700~899)
//遺物	9	(900~999)

//D		0
//A		6
//特殊
//混合

//無	0
//毒	1
//心	2
//乙太	3
//火	4
//冰	5
func changeEquip()
	?skillActionDuration <= 0
		?equipBuffer > 0 | cancelBackswing() | canAction() | 
		^currentEquip = 0 | 
		^currentEquip - currentEquip % 90 = 90 | 
		^currentEquip - currentEquip % 900 = 900
			?equipBuffer >= 0 // =0 取消後搖  >0 清除冷卻
				equipL quest
				equipR compound
				currentEquip = -9
				equipTimer = 0
				?equipBuffer > 0
					c++
				d++
				equipBuffer--
			?e ! currentEquip & e ! -3 //目前裝備組!=需求裝備組
				?currentEquip >= 0
					equipTimer = 0
					attackCount = 0
				?e >= 0 & equipBuffer < 0
					//預設/組合裝備 (0~9/99)
					?e < 100
						?e < 10
							?e = 0 //加速石+蛇石
								loadout 0
							:?e = 1 //心劍+毒劍
								loadout 1
							:?e = 2 //心劍+火劍
								loadout 2
							:?e = 3 //心劍+冰劍
								loadout 3
							:?e = 4 //心劍+乙太劍
								loadout 4
							:?e = 5 //心劍+衝鋒盾
								loadout 5
							:?e = 6 //月牙
								loadout 6
							:?e = 7 //連射弩
								loadout 7
							:?e = 8 //dI冰棍
								loadout 8
							:?e = 9 //
								loadout 9
						//:?e < 20
						:?e < 30
							?e = 22 //消解小劍+盾
								eL = "aether sword *10 dU"
								eR = "aether shield *10 au"
							?e = 23 //消解大劍+盾
								eL = "aether big sword *10 dU"
								eR = "aether shield *10 au"
							?e = 24 //消解大劍+小劍
								eL = "aether big sword *10 dU"
								eR = "aether sword *10 dU"
						:
							?e = 90
								eL = "ouroboros"
								eR = "trisk"
							:?e = 93
								eL = "star"
								eR = "trisk"

					//短劍 1 (100~199)
					:?e < 200
						?e < 110 //雙D (101~105)
							?e = 101 //D毒劍
								eL = "poison sword *10 D +20"
								eR = "poison sword *10 D +21"
							:?e = 102 //D心劍
								eL = "vigor sword *10 D +20"
								eR = "vigor sword *10 D +21"
							:?e = 103 //D乙太劍
								eL = "aether sword *10 D +20"
								eR = "aether sword *10 D +21"
							:?e = 104 //雙D火劍
								eL = "fire sword *10 D +21"
								eR = "fire sword *10 D +20"
							:?e = 105 //D冰劍
								eL = "ice sword *10 D +21"
								eR = "ice sword *10 D +20"
								
						:?e < 150 //毒D (141~145)
							?e = 141
								eL = "poison sword *10 dp"
								eR = "poison sword *10 D"
							?e = 142
								eL = "poison sword *10 dp"
								eR = "vigor sword *10 D"
							?e = 143
								eL = "poison sword *10 dp"
								eR = "aether sword *10 D"
							?e = 144
								eL = "poison sword *10 dp"
								eR = "fire sword *10 D +16"
							?e = 145
								eL = "poison sword *10 dp"
								eR = "ice sword *10 D"

						:?e < 160 //心D (151~155)
							?e = 171
								eL = "vigor sword *10 dI"
								eR = "poison sword *10 D"
							?e = 172
								eL = "vigor sword *10 dI"
								eR = "vigor sword *10 D"
							?e = 173
								eL = "vigor sword *10 dI"
								eR = "aether sword *10 D"
							?e = 174
								eL = "vigor sword *10 dI"
								eR = "fire sword *10 D"
							?e = 175
								eL = "vigor sword *10 dI"
								eR = "ice sword *10 D"

						//:?e < 170 //火D (161~165)

						:?e < 180 //冰D (171~175)
							?e = 171
								eL = "ice sword *10 dI"
								eR = "poison sword *10 D"
							?e = 172
								eL = "ice sword *10 dI"
								eR = "vigor sword *10 D"
							?e = 173
								eL = "ice sword *10 dI"
								eR = "aether sword *10 D"
							?e = 174
								eL = "ice sword *10 dI"
								eR = "fire sword *10 D"
							?e = 175
								eL = "ice sword *10 dI"
								eR = "ice sword *10 D"

						:?e < 200
							?e = 192 //回復
								eL = "vigor sword *10 dL +20"
								eR = "vigor sword *10 dL +21"
							?e = 195 //減速
								eL = "ice sword *10 dI +20"
								eR = "ice sword *10 dI +21"

						

					//大劍 2 (200~299)
					//:?e < 300

					//盾 3 (300~399)
					:?e < 400
						?e < 310
							?e = 306 //冲刺盾
								eL = "vigor sword *10 dL"
								eR = "dash"
							:?e = 307 //複合盾
								eL = "quest"
								eR = "compound"
						:?e < 320
							?e = 311 //ap盾
								eL = "vigor sword *10 dL"
								eR = "poison shield *10 ap"
							:?e = 312 //ah盾
								eL = "vigor sword *10 dL"
								eR = "vigor shield *10 ah"
							:?e = 313 //au盾
								eL = "vigor sword *10 dL"
								eR = "aether shield *10 au"
						:?e < 370
							?e = 361 //A毒盾
								eL = "poison hammer *10 A"
								eR = "poison shield *10 A"
							?e = 362 //A心盾
								eL = "vigor hammer *10 A"
								eR = "vigor shield *10 A"
							?e = 363 //A乙太盾
								eL = "aether hammer *10 A"
								eR = "aether shield *10 A"
							?e = 364 //A火盾
								eL = "fire hammer *10 A"
								eR = "fire shield *10 A"
							?e = 365 //A冰盾
								eL = "ice hammer *10 A"
								eR = "ice shield *10 A"

					//弩 4 (400~499)
					:?e < 500
						?e = 413 //D乙太弩
							eL = ""
							eR = "aether crossbow"
						?e = 430 //連射弩
							eL = ""
							eR = "repeating_crossbow"

					//棍 5 (500~599)
					:?e < 600
						?e = 500 //木棍
							eL = ""
							eR = "quarterstaff"
						:?e = 515 //dI冰棍
							eL = ""
							eR = "ice staff *10 dI"

					//鎚 6 (600~699)
					:?e < 700
						e = 601 //毒鎚
							eL = "poison hammer *10 D +21"
							eR = "poison hammer *10 D +20"
						e = 604 //雙D火鎚
							eL = "fire hammer *10 D +19"
							eR = "fire hammer *10 D +17"

					//其他 (700~899)
					:?e < 900
						?e = 700 //月牙
							eL = ""
							eR = "bardiche"
						:?e = 863 //加速+搜集
							eL = "trisk"
							eR = "star"
						:?e = 864 //加速+回血
							eL = "ouroboros"
							eR = "trisk"

					//遺物 9 (900~999)
					:?e < 1000
						?e = 901 //打擊盾
							eL = "vigor sword *10 dL"
							eR = "bash"
						:?e = 902 //墮神之劍
							equip blade
					?e > 10
						?eL
							equipL @eL@
						?eR
							equipR @eR@

				currentEquip = e

/*
func determineChangeEquip()
	?cancelBackswing()
		return true
	?currentEquip < 0
		return true
	?currentEquip = 93
		return true
	?currentEquip - currentEquip % 90 = 90
		return true
	?currentEquip - currentEquip % 900 = 900
		return true
	?canAction()
		return true
	return false
*/

//取消後搖
func cancelBackswing()
	equipBuffer = -1
	?!isUseSkill() & foeInjury & foe ! wasp
		?(
		//^(currentEquip = 1 & currentEquip ! e) |
		//^currentEquip = 2 | 
		//^(currentEquip - currentEquip % 100 = 100 & currentEquip ! 104) |
		^currentEquip = 6 | currentEquip = 700 | currentEquip = 22 | currentEquip = 23 |
		^currentEquip = 93 | 
		^(foe.distance < 10 & currentEquip = 515)
		^)
			equipBuffer = 0

		:
			?currentEquip - currentEquip % 10 = 100
				equipBuffer = 42 //speed:42*2
				//equipBuffer = equipBuffer * 2
				?loc = rocky & foe = phase2
					equipBuffer = equipBuffer * 2
				?playerBuffs.luckyTimer
					equipBuffer = damage = equipBuffer * 12
				:
					equipBuffer = damage = equipBuffer * 2 | damage = equipBuffer * 5 | damage = equipBuffer * 8
				?equipBuffer
					equipBuffer = 0
				:
					equipBuffer = 1

			:?currentEquip = 604
				?foe.armor <= 0
					equipBuffer = 0
				:
					equipBuffer = 518 //15:28+82 14:28+78 //speed:250
					?playerBuffs.luckyTimer
						equipBuffer = equipBuffer * 3
					equipBuffer = ((damage >= equipBuffer) | (attackCount = 0))
					?equipBuffer
						equipBuffer = 0
					:
						equipBuffer = 2

	?equipBuffer < 0
		return false
	:
		return true
		/*
		?equipBuffer = 0
			equipL quest
			equipR compound
			currentEquip = -9
			equipTimer = 0
			return true
		:?equipBuffer > 0
			currentEquip = -4
		*/


// 資料更新 //
func update()
	updateTest()

	updateState()
	updateSkillCD()
	updateTimer()

	showData()


// 測試更新 //
func updateTest()
	return
	//?playerInjury
	
	//?foeInjury
	
	//?debuffs.count > playerDebuffsCount

	//?distance > foe.distance

	//?foe.state = 32
		c = foe.distance
		d = timer
		timer = 0

	//?foe.state = 32 | foe.state = 115
		b = foe.time


// 狀態數據更新 //
func updateState()
	playerHp = hp
	playerDebuffsCount = debuffs.count
	
	foeMaxHp = foe.maxhp
	foeHp = foe.hp
	foeMaxArmor = foe.maxarmor
	foeArmor = foe.armor
	distance = foe.distance
	foeDebuffsCount = foe.debuffs.count


// 技能CD更新 //
func updateSkillCD()
	?skillActionDuration
		skillActionDuration--
	?fissureStoneSkillCD
		fissureStoneSkillCD--
	
	//?e = 864
	//	ouroborosSkillTimer--
	//	?ouroborosSkillTimer = 0
	//		ouroborosSkillUseCount++
	//		ouroborosSkillTimer = 188 + ouroborosSkillUseCount % 2

	dashStoneSkillCD = item.GetCooldown("dash")
	bashStoneSkillCD = item.GetCooldown("bash")
	mindStoneSkillCD = item.GetCooldown("mind")
	quarterstaffSkillCD = item.GetCooldown("quarterstaff")
	bardicheSkillCD = item.GetCooldown("bardiche")
	bladeSkillCD = item.GetCooldown("blade")


// 計時更新 //
func updateTimer()
	equipTimer++
	timer++
	t++

// 顯示數據 //
func showData()
	>`0,5,
	^@a@ @b@ @c@ @d@ @dash@ @attackCount@\n
	^ai:@ai.enabled@ @ai.paused@ @ai.idle@ @ai.walking@\n
	^DPS     :@DPS.DPS@ @DPS.maxDPS@ @DPS.dpsTimer@\n
	^         @DPS.globalDPS@ @DPS.globalMaxDPS@ @DPS.globalDpsTimer@\n
	^state   :@playerInjury@ @foeInjury@ @playerState@ @foeState@\n
	^         @foe.state@ @foe.time@\n
	^action  :@action@ @skillAction@\n
	^timer   :@timer@ @t@\n
	^equip   :@currentEquip@ @e@ @equipTimer@ @equipBuffer@\n
	^        |@eL@|@eR@\n
	^boss    :@bossFight@ @bossConvert@ @bossAttackLoop@ @bossDissolve@\n
	^buffs   :@buffs.string@ @debuffs.string@\n
	^foebuffs:
	^∞@foeDeBuffs.poisonTimer@ φ@foeDeBuffs.fireTimer@ @foeDeBuffs.iceCount@❄@foeDeBuffs.iceTimer@
	^@foe.buffs.string@\n
	^count:@foe.count@ distance:@foe.distance@ @damage@\n
	^potion  :@potion.name@\n
	^skillCD :@skillActionDuration@\n
	^@dashStoneSkillCD@ @bashStoneSkillCD@ @quarterstaffSkillCD@\n
	^mind stone @mindStoneSkillCD@\n
	^bardiche   @bardicheSkillCD@\n
	^blade      @bladeSkillCD@\n


// 空閒檢測 //
func canAction()
	//cache = action
	action = (!isUseSkill() & (ai.idle | ai.walking)) | equipTimer > 60
	return action

func isUseSkill()
	// 技能釋放檢測 //
	?skillAction & skillActionDuration <= 0 & foeInjury
		skillAction = false
	return skillActionDuration > 0 | skillAction


// boss戰開始檢測 //
func bossFightStart()
	?foe = boss
		?foe = phase1
			?bossFight ! 1
				bossDataInitialize(1)
		:?foe = phase2
			?bossFight ! 2
				bossDataInitialize(2)
		:?foe = phase3
			?bossFight ! 3
				bossDataInitialize(3)

	//出埸動畫檢測
	?bossFight
		?ai.enabled
			?bossConvert = -1
				bossConvert = 0
		:
			?(foe.hp <= 0 | foeState % 10 = 0)
				bossConvert = -1

	//小boss
	:?foe = boss | foe = wasp | (loc = halls & pos.x >= 460)
		?bossFight = 0
			bossDataInitialize(-1)

func bossDataInitialize(n)
	bossFight = n
	bossConvert = -1
	bossAttackLoop = -1
	bossDissolve = true
	timer = 0
	t = 0
	//a = 0





// debuff檢測 //

//毒
func needPoison()
	return foeDeBuffs.poisonTimer <= (20 * (1 + playerDeBuffs.iceCount / 12))
	return false

//火
func needFire()
	return foeDeBuffs.fireTimer <= (20 * (1 + playerDeBuffs.iceCount / 12))

//冰
func needIce()
	return foeDeBuffs.iceCount < 6 | foeDeBuffs.iceTimer <= (25 * (1 + playerDeBuffs.iceCount / 12))

func iceEffect()
	return foeDeBuffs.iceCount * 20 / 3

//預設全debuff檢測
func needAddFoeState()
	?foe = immune_to_debuff_damage | foeBuffs.vigorTimer
		return false
	?needPoison()
		e = 1
	//:?needFire()
	//	e = 2
	:?needIce()
		e = 3
	:
		return false
	return true





// skill  //  技能  //

//potion
func usePotion()
	activate potion
	potion.clear()

//Dash
func useDashSkill()
	?foe.distance > 10
		?dashStoneSkillCD <= 0
			e = 306
		:?bashStoneSkillCD <= 0
			e = 901

//Mind Stone
func useMindStoneSkill()
	?mindStoneSkillCD <= 0 & item.canactivate()
		equipL quest
		equipR mind
		currentEquip = 899
		skillActionDuration = MindStoneSkillActionDuration
		canAction()

//Fissure Stone
func useFissureStoneSkill()
	?fissureStoneSkillCD <= 0 & item.canactivate()
		equipL quest
		equipR fissure
		currentEquip = -1
		fissureStoneSkillCD = FissureStoneSkillCooldown
		skillAction = true
		canAction()

//Quarterstaff
func useQuarterstaffSkill()
	?quarterstaffSkillCD <= 0 & !isUseSkill() & item.canactivate()
		equipR quarterstaff
		currentEquip = 500
		activate R
		skillActionDuration = QuarterstaffSkillActionDuration
		canAction()

//Bardiche
func useBardicheSkill()
	?foe.distance <= 10 & foe.hp > 0 & bardicheSkillCD <= 0 &
	^!isUseSkill() & action & item.canactivate()
		equip bardiche
		currentEquip = 6
		activate R
		skillActionDuration = BardicheSkillActionDuration
		skillAction = true
		canAction()

//Blade
func useBladeSkill()
	?foe.hp <= BladeSkillPower & bladeSkillCD <= 0 & screen.x % 69 = 0 & action & item.canactivate()
		equip blade
		currentEquip = 902
		activate R
		skillActionDuration = BladeSkillActionDuration





//  BOSS Fight  //  BOSS戰  //

func bossFightInRocky()
	?bossFight < 0
			
		?foe.distance <= 10
			?!needAddFoeState()
				e = 6
				useBardicheSkill()
		:
			useDashSkill()
	:
		//第1形態
		?foe = phase1
			?foe.distance <= 10
				?!needAddFoeState()
					?playerState > 1
						e = 192
					:
						e = 104
			:
				useDashSkill()

		//第2形態
		:?foe = phase2
			?foe.distance <= 10
				//狀態無效 vigor
				//?foeBuffs.vigorTimer & playerState <= 2
				//	e = 6
				?foe = fire & foe.state = 33
					bossDissolve = false
				
				?foe = poison
					e = 105
				:?foe = vigor
					e = 101
				:?foe = aether
					e = 102
				:?foe = fire
					e = 103
					//消解
					//?bossDissolve & foe.time > 30 + iceEffect()
					//	e = 4
					//:
					//	e = 103
				:?foe = ice
					e = 104
				?foe.time < 30 + iceEffect()
					?needIce() & foeBuffs.vigorTimer <= 0
						e = 195
					:?playerState > 1
						e = 192
			:
				useDashSkill()

		//第3形態
		:?foe = phase3
			?foe.distance <= 10
				?foe.armor > 0
					e = 604
				:?playerBuffs.vampiricTimer | playerBuffs.luckyTimer | playerBuffs.strengthTimer
					e = 104
				:?skillActionDuration < 2 & !needIce() & //foe.hp > foe.maxhp / 2 &
				^((potion.name = "lucky" & (mindStoneSkillCD > 0 | bossAttackLoop = 3 | bossAttackLoop = 0) & foe.armor <= 0) |
				^(potion.name = "strength" & foe.armor > 4000))
					e = 104
					?currentEquip = 104 & equipTimer > 1
						usePotion()
					return

				:?needPoison() & (bossAttackLoop ! 2 & bossAttackLoop ! 5) & foe.state = 32 & foe.time > 30
					e = 1
				:?(needIce() & bossAttackLoop ! 5) //| (bossAttackLoop = 1 & foe.state = 2)
					e = 3
				:?playerState > 2
					e = 192
				:
					e = 104
					
				?foe.distance > 5 & e ! 6
					useQuarterstaffSkill()
					?quarterstaffSkillCD = QuarterstaffSkillCooldown
						skillActionDuration++
			:
				?mindStoneSkillCD > 0 & foe.distance > 15
					useQuarterstaffSkill()
				:
					useDashSkill()


			//激光
			?(foe.state = 115 & foe.time = 76) |

			//暈+盾 time:29
			^(bossAttackLoop = 2 & foe.state = 32 & foe.time = 27 + iceEffect() & foe.distance < 8)
				useMindStoneSkill()

			?(foe.state = 32 | foe.state = 115) & foe.time = 0
				bossAttackLoop = (bossAttackLoop + 1) % 6

		?(foe.hp > BardichePower * 4 &
		^(foe = phase1 | (foe = phase2 & foe.state = 33))) |
		^(foe = phase3 & !buffs.count & (bossAttackLoop ! 2 & bossAttackLoop ! 5))
			useBardicheSkill()



func bossFightInDeadwood()
	?bossFight < 0
		?foe.distance <= 15
			?playerBuffs.smiteCount
				e = 8
			:
				e = 7
		:
			useDashSkill()
	:
		?foe.distance <= 18
			?foe.distance <= 5
				?needIce()
					e = 3
				:
					e = 6
			:
				useDashSkill()
		//time = 33
		?foe.state = 32 & foe.time = 32 + iceEffect()
			useMindStoneSkill()
		useBardicheSkill()


func bossFightInCaves()
	?foe.distance <= 10
		//?needPoison()
		//	e = 1
		?needIce() | playerState ! 0
			e = 3
		:
			e = 6
		useBardicheSkill()
	:
		useDashSkill()

	?bossFight > 0
		?mindStoneSkillCD > 60
			?needIce()
				e = 8
			:
				e = 6
			?foe.distance >= 15
				useQuarterstaffSkill()
		//time = 21(近)
		?foe.state = 142 & foe.time = 20 + iceEffect()
			useMindStoneSkill()


func bossFightInMushroom()
	?bossFight < 0
		?foe = fluff
			//e = 7
			?foe.distance <= 6
				useMindStoneSkill()
			?mindStoneSkillCD > 0
				e = 8
			:		
				useDashSkill()
		:
			useBardicheSkill()
			?foe.distance <= 20
				e = 6
	:?foe.distance <= 10
		?foe = phase1
			?potion.name = "lucky" //& foe.state = 1 & foe.time > 70
				usePotion()
				return
				
			>@bossAttackLoop@ @needAddFoeState()@
			?bossAttackLoop ! 0 | !needAddFoeState()
				?foe.armor
					e = 601
				:
					e = 101

			?foe.state = 32 & foe.time = 0
				bossAttackLoop = (bossAttackLoop + 1) % 6

			//time = 49
			?bossAttackLoop = 0 & foe.state = 32 & foe.time = 48 + iceEffect()
				useMindStoneSkill()

		:?foe = phase2
			//?timer = 30 | timer >= 120 & timer % 18 = 0
			//	equip poison shield *10 ap
			//	e = -3
			//	currentEquip = 311
			//	t = 0
			
			?foe.count = 2
				?needPoison()
					e = 1
				:
					e = 101

				//time = 29(近)
				?foe.state = 32 & foe.time = 28 + iceEffect()
					useMindStoneSkill()
			:
				?needPoison()
					e = 1
				:
					e = 101

		useBardicheSkill()
	:
		useDashSkill()


func bossFightInHalls()
	?bossFight < 0
		?draw.getsymbol(screen.w / 2 + 24, screen.h / 2 + 6) = "\"
			bossConvert = 1
		?pos.x < 470 & foe.distance > 20
			useDashSkill()
		:?bossConvert = 0
			e = 7
		:
			e = 8
	:?foe = phase1
		?foe.distance <= 10
			//time = 69
			//?foe.state = 32 & foe.time > 55
			//	e = 4
			?needPoison()
				e = 1
			:?playerState > 2
				e = 102
			:
				e = 6
		:
			useDashSkill()
			
	:
		?t <= 10
			?playerBuffs.smiteCount
				e = 8
			:
				e = 7
		:?foe.distance <= 10
			?foe.count > 1
				e = 6
			:?needIce()
				e = 3
		:
			useDashSkill()
		?foe = boss & foe.state = 32 & foe.time = 18 + iceEffect()
			useMindStoneSkill()
			t = 0
	?foe = boss
		useBardicheSkill()


func bossFightInMine()
	?bossFight < 0
		?foe.distance <= 6
			useMindStoneSkill()
		?mindStoneSkillCD > 0
			e = 8
		:		
			useDashSkill()
	:
		//time:
		?foe.state = 32 & foe.time = 27 & foe.distance > 15
			useMindStoneSkill()
			bossConvert = 1
		:?distance < foe.distance & distance <= 10
			useQuarterstaffSkill()
			bossConvert = 0

		?foe.distance <= 18
			?foe.distance <= 10
				e = 6
				useBardicheSkill()
			:
				useDashSkill()
		:
			?bossConvert = 1
				e = 864
			:
				e = 430
				

func bossFightInRidge()
	?bossFight < 0
		?foe.distance <= 5
			e = 6
			?bossAttackLoop = 6
				useQuarterstaffSkill()
		:
			useDashSkill()
			?foe.distance > 15
				useQuarterstaffSkill()

		?foeInjury
			bossAttackLoop = (bossAttackLoop + 1) % 7
	:
		?foe.armor <= 0 & potion.name = "lucky" & foe.state = 1 & foe.time > 90
			usePotion()
			return
			
		e = 6
		?foe.count = 1
			?foe.distance <= 5
				?foe.armor > 0
					e = 604
				:?needIce()
					e = 174
				:
					e = 104
			:?foe.state = 133 | foe.state = 143
				?playerBuffs.smiteCount
					e = 8
				:
					e = 7
			:
				useDashSkill()


	?foe = boss & foe.armor <= 0 & foe.state < 100
		useBardicheSkill()


func bossFightInTemple()
	?bossFight < 0
		?foe.distance <= 10
			e = 6
		:
			useDashSkill()
	:
		?bossConvert = 1
			?foe.distance > 10
				e = 8
			:
				e = 6
		:
			?foe.distance <= 10
				?!needAddFoeState()
					?debuffs.count < 10 & playerState > 2
						e = 3
					:
						e = 6
				useBardicheSkill()
			:
				useDashSkill()


		?(foe.state = 31 | foe.state = 33) & foe.time = 0
			timer = 0

		?foe.distance <= 5
			symbol = draw.getsymbol(screen.w / 2 + 6, screen.h / 2 - 7)
		:
			symbol = draw.getsymbol(screen.w / 2 + 4, screen.h / 2 - 7)
		?symbol = "("
			//?bossConvert = 1
			//	bossConvert = 0
			?mindStoneSkillCD <= 0
				useMindStoneSkill()
				bossConvert = 1





func fightTest()
	?time % 2 = 0
		equip quarterstaff
	:
		loadout 6
	?foe.distance <= 10
		activate R
		>`0,1,@time@

main()